stages:
  - test
  - build
  - deploy

docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/trading_bot:latest" .
    - docker push "$CI_REGISTRY_IMAGE/trading_bot:latest"
  only:
    - master

docker-build-uat:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/trading_bot:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE/trading_bot:$CI_COMMIT_REF_SLUG"
  only:
    - uat

unit-test:
  stage: test
  image: python
  script:
    - pip install -r requirements.txt
    - pytest test/

deploy-to-aws:
  image: python
  stage: deploy
  script:
    - pip install awscli
    - aws ecs update-service --region ap-south-1 --service $ECS_SERVICE --cluster $ECS_CLUSTER --force-new-deployment
  only:
    - master